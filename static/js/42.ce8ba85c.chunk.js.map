{"version":3,"sources":["routes.js","containers/DefaultLayout/DefaultLayout.js"],"names":["Dashboard","React","lazy","Bike","routes","path","exact","name","component","DefaultLayout","DefaultFooter","DefaultHeader","loading","className","e","preventDefault","this","props","history","push","fixed","fallback","onLogout","signOut","style","marginBottom","Container","fluid","map","route","idx","key","render","from","to","Component"],"mappings":"0LAIMA,EAAYC,IAAMC,MAAK,kBAAM,uEAC7BC,EAAOF,IAAMC,MAAK,kBAAM,gEAkOfE,GAhOKH,IAAMC,MAAK,kBAAM,kCACvBD,IAAMC,MAAK,kBAAM,wDACbD,IAAMC,MAAK,kBAAM,wDACjBD,IAAMC,MAAK,kBAAM,wDACjBD,IAAMC,MAAK,kBAAM,wDACrBD,IAAMC,MAAK,kBAAM,sEACZD,IAAMC,MAAK,kBAAM,kCACjBD,IAAMC,MAAK,kBAAM,kCACpBD,IAAMC,MAAK,kBAAM,+DACpBD,IAAMC,MAAK,kBAAM,wDACVD,IAAMC,MAAK,kBAAM,kCACpBD,IAAMC,MAAK,kBAAM,+DACdD,IAAMC,MAAK,kBAAM,kCACpBD,IAAMC,MAAK,kBAAM,kCACnBD,IAAMC,MAAK,kBAAM,kCACnBD,IAAMC,MAAK,kBAAM,kCACbD,IAAMC,MAAK,kBAAM,+DACVD,IAAMC,MAAK,kBACjC,wDAEmBD,IAAMC,MAAK,kBAAM,+DACtBD,IAAMC,MAAK,kBAAM,kCACbD,IAAMC,MAAK,kBAAM,kCACjBD,IAAMC,MAAK,kBAAM,wDACbD,IAAMC,MAAK,kBACjC,kCAEaD,IAAMC,MAAK,kBAAM,wDACjBD,IAAMC,MAAK,kBAAM,kCACjBD,IAAMC,MAAK,kBAAM,wDACjBD,IAAMC,MAAK,kBAAM,wDAChBD,IAAMC,MAAK,kBAAM,wDAGlB,CACb,CACEG,KAAM,IACNC,OAAO,EACPC,KAAM,OACNC,UAAWC,GAEb,CACEJ,KAAM,aACNE,KAAM,YACNC,UAAWR,GAEb,CACEK,KAAM,QACNE,KAAM,OACNC,UAAWL,KCjCTO,EAAgBT,IAAMC,MAAK,kBAAM,kCACjCS,EAAgBV,IAAMC,MAAK,kBAAM,kCAEjCO,E,4MACJG,QAAU,kBACR,yBAAKC,UAAU,oCAAf,e,sDAGMC,GACNA,EAAEC,iBACFC,KAAKC,MAAMC,QAAQC,KAAK,Y,+BAGhB,IAAD,OACP,OACE,yBAAKN,UAAU,OACb,kBAAC,IAAD,CAAWO,OAAK,GACd,kBAAC,WAAD,CAAUC,SAAUL,KAAKJ,WACvB,kBAACD,EAAD,CAAeW,SAAU,SAAAR,GAAC,OAAI,EAAKS,QAAQT,QAG/C,yBAAKD,UAAU,YAUb,0BAAMA,UAAU,QACd,yBAAKW,MAAO,CAAEC,aAAa,YAC3B,kBAACC,EAAA,EAAD,CAAWC,OAAK,GACd,kBAAC,WAAD,CAAUN,SAAUL,KAAKJ,WACvB,kBAAC,IAAD,KACGR,EAAOwB,KAAI,SAACC,EAAOC,GAClB,OAAOD,EAAMrB,UACX,kBAAC,IAAD,CACEuB,IAAKD,EACLzB,KAAMwB,EAAMxB,KACZC,MAAOuB,EAAMvB,MACbC,KAAMsB,EAAMtB,KACZyB,OAAQ,SAAAf,GAAK,OAAI,kBAACY,EAAMrB,UAAcS,MAEtC,QAEN,kBAAC,IAAD,CAAUgB,KAAK,IAAIC,GAAG,oBAMhC,kBAAC,IAAD,KACE,kBAAC,WAAD,CAAUb,SAAUL,KAAKJ,WACvB,kBAACF,EAAD,a,GApDgByB,aA4Db1B","file":"static/js/42.ce8ba85c.chunk.js","sourcesContent":["/* eslint-disable */\nimport React from 'react'\nimport DefaultLayout from './containers/DefaultLayout'\n\nconst Dashboard = React.lazy(() => import('./views/Dashboard'))\nconst Bike = React.lazy(() => import('./views/Bike'))\n\nconst Breadcrumbs = React.lazy(() => import('./views/Base/Breadcrumbs'))\nconst Cards = React.lazy(() => import('./views/Base/Cards'))\nconst Carousels = React.lazy(() => import('./views/Base/Carousels'))\nconst Collapses = React.lazy(() => import('./views/Base/Collapses'))\nconst Dropdowns = React.lazy(() => import('./views/Base/Dropdowns'))\nconst Forms = React.lazy(() => import('./views/Base/Forms'))\nconst Jumbotrons = React.lazy(() => import('./views/Base/Jumbotrons'))\nconst ListGroups = React.lazy(() => import('./views/Base/ListGroups'))\nconst Navbars = React.lazy(() => import('./views/Base/Navbars'))\nconst Navs = React.lazy(() => import('./views/Base/Navs'))\nconst Paginations = React.lazy(() => import('./views/Base/Paginations'))\nconst Popovers = React.lazy(() => import('./views/Base/Popovers'))\nconst ProgressBar = React.lazy(() => import('./views/Base/ProgressBar'))\nconst Switches = React.lazy(() => import('./views/Base/Switches'))\nconst Tables = React.lazy(() => import('./views/Base/Tables'))\nconst Tabs = React.lazy(() => import('./views/Base/Tabs'))\nconst Tooltips = React.lazy(() => import('./views/Base/Tooltips'))\nconst ButtonDropdowns = React.lazy(() =>\n  import('./views/Buttons/ButtonDropdowns')\n)\nconst ButtonGroups = React.lazy(() => import('./views/Buttons/ButtonGroups'))\nconst Buttons = React.lazy(() => import('./views/Buttons/Buttons'))\nconst CoreUIIcons = React.lazy(() => import('./views/Icons/CoreUIIcons'))\nconst FontAwesome = React.lazy(() => import('./views/Icons/FontAwesome'))\nconst SimpleLineIcons = React.lazy(() =>\n  import('./views/Icons/SimpleLineIcons')\n)\nconst Alerts = React.lazy(() => import('./views/Notifications/Alerts'))\nconst Badges = React.lazy(() => import('./views/Notifications/Badges'))\nconst Modals = React.lazy(() => import('./views/Notifications/Modals'))\nconst Colors = React.lazy(() => import('./views/Theme/Colors'))\nconst Widgets = React.lazy(() => import('./views/Widgets/Widgets'))\n\n// https://github.com/ReactTraining/react-router/tree/master/packages/react-router-config\nconst routes = [\n  {\n    path: '/',\n    exact: true,\n    name: 'Home',\n    component: DefaultLayout,\n  },\n  {\n    path: '/dashboard',\n    name: 'Dashboard',\n    component: Dashboard,\n  },\n  {\n    path: '/bike',\n    name: 'Bike',\n    component: Bike,\n  },\n\n  // {\n  //   path: '/theme',\n  //   exact: true,\n  //   name: 'Theme',\n  //   component: Colors\n  // },\n  // {\n  //   path: '/theme/colors',\n  //   name: 'Colors',\n  //   component: Colors\n  // },\n  // {\n  //   path: '/base',\n  //   exact: true,\n  //   name: 'Base',\n  //   component: Cards\n  // },\n  // {\n  //   path: '/base/cards',\n  //   name: 'Cards',\n  //   component: Cards\n  // },\n  // {\n  //   path: '/base/forms',\n  //   name: 'Forms',\n  //   component: Forms\n  // },\n  // {\n  //   path: '/base/switches',\n  //   name: 'Switches',\n  //   component: Switches\n  // },\n  // {\n  //   path: '/base/tables',\n  //   name: 'Tables',\n  //   component: Tables\n  // },\n  // {\n  //   path: '/base/tabs',\n  //   name: 'Tabs',\n  //   component: Tabs\n  // },\n  // {\n  //   path: '/base/breadcrumbs',\n  //   name: 'Breadcrumbs',\n  //   component: Breadcrumbs\n  // },\n  // {\n  //   path: '/base/carousels',\n  //   name: 'Carousel',\n  //   component: Carousels\n  // },\n  // {\n  //   path: '/base/collapses',\n  //   name: 'Collapse',\n  //   component: Collapses\n  // },\n  // {\n  //   path: '/base/dropdowns',\n  //   name: 'Dropdowns',\n  //   component: Dropdowns\n  // },\n  // {\n  //   path: '/base/jumbotrons',\n  //   name: 'Jumbotrons',\n  //   component: Jumbotrons\n  // },\n  // {\n  //   path: '/base/list-groups',\n  //   name: 'List Groups',\n  //   component: ListGroups\n  // },\n  // {\n  //   path: '/base/navbars',\n  //   name: 'Navbars',\n  //   component: Navbars\n  // },\n  // {\n  //   path: '/base/navs',\n  //   name: 'Navs',\n  //   component: Navs\n  // },\n  // {\n  //   path: '/base/paginations',\n  //   name: 'Paginations',\n  //   component: Paginations\n  // },\n  // {\n  //   path: '/base/popovers',\n  //   name: 'Popovers',\n  //   component: Popovers\n  // },\n  // {\n  //   path: '/base/progress-bar',\n  //   name: 'Progress Bar',\n  //   component: ProgressBar\n  // },\n  // {\n  //   path: '/base/tooltips',\n  //   name: 'Tooltips',\n  //   component: Tooltips\n  // },\n  // {\n  //   path: '/buttons',\n  //   exact: true,\n  //   name: 'Buttons',\n  //   component: Buttons\n  // },\n  // {\n  //   path: '/buttons/buttons',\n  //   name: 'Buttons',\n  //   component: Buttons\n  // },\n  // {\n  //   path: '/buttons/button-dropdowns',\n  //   name: 'Button Dropdowns',\n  //   component: ButtonDropdowns\n  // },\n  // {\n  //   path: '/buttons/button-groups',\n  //   name: 'Button Groups',\n  //   component: ButtonGroups\n  // },\n  // {\n  //   path: '/icons',\n  //   exact: true,\n  //   name: 'Icons',\n  //   component: CoreUIIcons\n  // },\n  // {\n  //   path: '/icons/coreui-icons',\n  //   name: 'CoreUI Icons',\n  //   component: CoreUIIcons\n  // },\n  // {\n  //   path: '/icons/font-awesome',\n  //   name: 'Font Awesome',\n  //   component: FontAwesome\n  // },\n  // {\n  //   path: '/icons/simple-line-icons',\n  //   name: 'Simple Line Icons',\n  //   component: SimpleLineIcons\n  // },\n  // {\n  //   path: '/notifications',\n  //   exact: true,\n  //   name: 'Notifications',\n  //   component: Alerts\n  // },\n  // {\n  //   path: '/notifications/alerts',\n  //   name: 'Alerts',\n  //   component: Alerts\n  // },\n  // {\n  //   path: '/notifications/badges',\n  //   name: 'Badges',\n  //   component: Badges\n  // },\n  // {\n  //   path: '/notifications/modals',\n  //   name: 'Modals',\n  //   component: Modals\n  // },\n  // {\n  //   path: '/widgets',\n  //   name: 'Widgets',\n  //   component: Widgets\n  // },\n]\n\nexport default routes\n","/* eslint-disable */\n\nimport React, { Component, Suspense } from 'react'\nimport { Redirect, Route, Switch } from 'react-router-dom'\nimport { Container } from 'reactstrap'\n\nimport {\n  //  AppAside,\n  AppFooter,\n  AppHeader,\n  AppSidebar,\n  AppSidebarFooter,\n  AppSidebarForm,\n  AppSidebarHeader,\n  AppSidebarMinimizer,\n  AppSidebarNav,\n} from '@coreui/react'\n// sidebar nav config\nimport navigation from '../../_nav'\n// routes config\nimport routes from '../../routes'\n\n//const DefaultAside = React.lazy(() => import(\"./DefaultAside\"));\nconst DefaultFooter = React.lazy(() => import('./DefaultFooter'))\nconst DefaultHeader = React.lazy(() => import('./DefaultHeader'))\n\nclass DefaultLayout extends Component {\n  loading = () => (\n    <div className=\"animated fadeIn pt-1 text-center\">Loading...</div>\n  )\n\n  signOut(e) {\n    e.preventDefault()\n    this.props.history.push('/login')\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        <AppHeader fixed>\n          <Suspense fallback={this.loading()}>\n            <DefaultHeader onLogout={e => this.signOut(e)} />\n          </Suspense>\n        </AppHeader>\n        <div className=\"app-body\">\n          {/* <AppSidebar minimized fixed display=\"lg\">\n            <AppSidebarHeader />\n            <AppSidebarForm />\n            <Suspense>\n              <AppSidebarNav navConfig={navigation} {...this.props} />\n            </Suspense>\n            <AppSidebarFooter />\n            <AppSidebarMinimizer />\n          </AppSidebar> */}\n          <main className=\"main\">\n            <div style={{ marginBottom: `1.5rem` }} />\n            <Container fluid>\n              <Suspense fallback={this.loading()}>\n                <Switch>\n                  {routes.map((route, idx) => {\n                    return route.component ? (\n                      <Route\n                        key={idx}\n                        path={route.path}\n                        exact={route.exact}\n                        name={route.name}\n                        render={props => <route.component {...props} />}\n                      />\n                    ) : null\n                  })}\n                  <Redirect from=\"/\" to=\"/dashboard\" />\n                </Switch>\n              </Suspense>\n            </Container>\n          </main>\n        </div>\n        <AppFooter>\n          <Suspense fallback={this.loading()}>\n            <DefaultFooter />\n          </Suspense>\n        </AppFooter>\n      </div>\n    )\n  }\n}\n\nexport default DefaultLayout\n"],"sourceRoot":""}