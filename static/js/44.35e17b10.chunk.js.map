{"version":3,"sources":["notifications/index.js","views/Bike/Cards/CardState.js","views/Bike/Cards/CardVideo.js","views/Bike/Cards/CardRasp.js","views/Bike/Cards/CardSettings.js","views/Bike/Bike.js","views/Bike/Cards/CardGear.js"],"names":["base","type","insert","container","animationIn","animationOut","width","dismiss","duration","onScreen","pauseOnHover","showIcon","CardState","props","toggle","setState","collapse","state","toggleButton","store","addNotification","title","message","reloadStatus","status","this","updateStatus","jstate","JSON","parse","stringify","jsettings","settings","replace","Card","CardHeader","Button","block","color","className","onClick","aria-expanded","Collapse","isOpen","CardBody","CardFooter","size","Component","CardVideo","handleSwitch","inputVideo","value","handleText","event","name","target","validity","valid","sendVideo","dest","Form","action","encType","FormGroup","row","Col","md","Label","variant","outline","label","checked","onChange","Input","pattern","placeholder","Row","data-dismiss","CardRasp","sendRasp","inputRasp","xs","xl","bind","CardSettings","inputSettings","saveSettings","update","d","Date","toLocaleTimeString","toLocaleDateString","month","day","currentTime","log","csv","ant","min","defaultValue","potenza","led","circonferenza","calibration_value","onInput","run","Bike","_isMounted","updateView","data","loading","p13","led_mode","circumference","calibration","video","video_running","video_recording","powermeter_running","heartrate_running","speed_running","visible","visible_video","visible_rasp","newValue","undefined"],"mappings":"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","file":"static/js/44.35e17b10.chunk.js","sourcesContent":["import 'react-notifications-component/dist/theme.css'\nimport 'animate.css'\n\n// Notifiche\nconst base = {\n  type: 'info',\n  insert: 'top',\n  container: 'top-right',\n  animationIn: ['animated', 'fadeIn'],\n  animationOut: ['animated', 'fadeOut'],\n  width: 300,\n  dismiss: {\n    duration: 2500,\n    onScreen: true, // true: mostra il countdown di scomparsa\n    pauseOnHover: true,\n    showIcon: true,\n  },\n}\n\nexport default base\n","import React, { Component } from 'react'\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  Collapse,\n} from 'reactstrap'\nimport { store } from 'react-notifications-component'\nimport base from 'notifications'\n\nclass CardState extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      status: '',\n      collapse: false,\n    }\n  }\n\n  // TODO: issue #22\n  UNSAFE_componentWillReceiveProps() {\n    this.updateStatus()\n  }\n\n  componentDidMount() {\n    this.updateStatus()\n  }\n\n  toggle = () => {\n    this.setState({ collapse: !this.state.collapse })\n  }\n\n  toggleButton = () => {\n    store.addNotification({\n      ...base,\n      title: 'State',\n      message: 'Aggiornato lo status',\n      type: 'success',\n    })\n    this.props.reloadStatus()\n  }\n\n  updateStatus() {\n    let jstate = JSON.parse(JSON.stringify(this.props.state))\n    let jsettings = JSON.parse(JSON.stringify(this.props.settings))\n\n    // rimuovo i campi superflui dall'output\n    delete jstate['dest']\n    delete jstate['type']\n    delete jsettings['dest']\n    delete jsettings['type']\n\n    let state = JSON.stringify(jstate, null, 1)\n      .replace(/\\{|\\}|\"|,|/g, '')\n      .replace('\\n', '')\n    let settings = JSON.stringify(jsettings, null, 1).replace(/\\{|\\}|\"|,/g, '')\n\n    this.setState({\n      status: state + settings,\n    })\n  }\n\n  render() {\n    return (\n      <Card>\n        <CardHeader>\n          <Button\n            block\n            color=\"link\"\n            className=\"text-left m-0 p-0\"\n            onClick={this.toggle}\n            aria-expanded={this.state.collapse}\n          >\n            <strong>Status</strong>\n          </Button>\n        </CardHeader>\n        <Collapse isOpen={!this.state.collapse}>\n          <CardBody>\n            <pre>\n              <code>{this.state.status}</code>\n            </pre>\n          </CardBody>\n          <CardFooter>\n            <Button\n              className=\"text-white bg-cyan\"\n              type=\"submit\"\n              size=\"sl\"\n              onClick={this.toggleButton}\n            >\n              <i className=\"fa fa-refresh\"></i> Reload\n            </Button>\n          </CardFooter>\n        </Collapse>\n      </Card>\n    )\n  }\n}\n\nexport default CardState\n","import React, { Component } from 'react'\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  Col,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  Row,\n  Collapse,\n} from 'reactstrap'\nimport { AppSwitch } from '@coreui/react'\n\nimport { store } from 'react-notifications-component'\nimport base from 'notifications'\n\nclass CardVideo extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      collapse: false,\n    }\n\n    this.inputVideo = {\n      dest: this.props.dest,\n      type: '7',\n      value: this.props.value,\n      name: '',\n    }\n  }\n\n  handleSwitch = () => {\n    this.inputVideo.value = !this.inputVideo.value\n  }\n\n  handleText = event => {\n    const name = event.target.value\n    if (event.target.validity.valid) {\n      this.inputVideo.name = name\n    }\n  }\n\n  toggle = () => {\n    this.setState({ collapse: !this.state.collapse })\n  }\n\n  sendVideo = () => {\n    store.addNotification({\n      title: 'Video',\n      message: 'Invio del pacchetto video alla bici',\n      ...base,\n    })\n    this.props.reloadStatus(this.inputVideo)\n  }\n\n  render() {\n    return (\n      <Card>\n        <CardHeader>\n          <Button\n            block\n            color=\"link\"\n            className=\"text-left m-0 p-0\"\n            onClick={this.toggle}\n            aria-expanded={this.state.collapse}\n          >\n            <strong>Video</strong>\n          </Button>\n        </CardHeader>\n        <Collapse isOpen={!this.state.collapse}>\n          <CardBody>\n            <Form\n              action=\"\"\n              encType=\"multipart/form-data\"\n              className=\"form-horizontal\"\n            >\n              <FormGroup row>\n                <Col md=\"9\">\n                  <Label>Registrazione</Label>\n                </Col>\n                <Col md=\"3\">\n                  <AppSwitch\n                    className={'mx-1'}\n                    variant={'pill'}\n                    color={'primary'}\n                    outline={'alt'}\n                    label\n                    checked={this.props.value}\n                    onChange={this.handleSwitch}\n                  />\n                </Col>\n              </FormGroup>\n              <FormGroup row>\n                <Col md=\"5\">\n                  <Label>File</Label>\n                </Col>\n                <Col md=\"7\">\n                  <Input\n                    className=\"text-center\"\n                    type=\"text\"\n                    pattern=\"*\"\n                    placeholder=\"Inserire nome del file video\"\n                    onChange={this.handleText}\n                  />\n                </Col>\n              </FormGroup>\n            </Form>\n          </CardBody>\n          <CardFooter>\n            <Row>\n              <Col md=\"9\">\n                <Button\n                  type=\"submit\"\n                  data-dismiss=\"alert\"\n                  size=\"sl\"\n                  color=\"primary\"\n                  onClick={this.sendVideo}\n                >\n                  <i className=\"fa fa-sign-out\"></i> Send\n                </Button>\n                &ensp;\n              </Col>\n            </Row>\n          </CardFooter>\n        </Collapse>\n      </Card>\n    )\n  }\n}\n\nexport default CardVideo\n","import React, { Component } from 'react'\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardHeader,\n  Col,\n  Row,\n  Collapse,\n} from 'reactstrap'\nimport { store } from 'react-notifications-component'\nimport base from 'notifications'\n\nclass CardRasp extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      collapse: false,\n    }\n\n    this.inputRasp = {\n      dest: this.props.dest,\n      type: '6',\n      value: '',\n    }\n  }\n\n  toggle = () => {\n    this.setState({ collapse: !this.state.collapse })\n  }\n\n  sendRasp = value => {\n    store.addNotification({\n      title: 'Raspberry',\n      message: 'Invio del pacchetto raspberry alla bici',\n      ...base,\n    })\n    this.inputRasp.value = value\n    this.props.reloadStatus()\n  }\n\n  render() {\n    return (\n      <Card>\n        <CardHeader>\n          <Button\n            block\n            color=\"link\"\n            className=\"text-left m-0 p-0\"\n            onClick={this.toggle}\n            aria-expanded={this.state.collapse}\n          >\n            <strong>Raspberry</strong>\n          </Button>\n        </CardHeader>\n        <Collapse isOpen={!this.state.collapse}>\n          <CardBody>\n            <Row>\n              <Col xs=\"7\" md=\"8\" xl=\"9\">\n                <Button\n                  type=\"submit\"\n                  data-dismiss=\"alert\"\n                  size=\"sl\"\n                  color=\"danger\"\n                  onClick={this.sendRasp.bind(this, '0')}\n                >\n                  <i className=\"fa fa-power-off\"></i> Spegni\n                </Button>\n              </Col>\n              <Col xs=\"5\" md=\"4\" xl=\"3\">\n                <Button\n                  className=\"text-white\"\n                  type=\"submit\"\n                  data-dismiss=\"alert\"\n                  size=\"sl\"\n                  color=\"warning\"\n                  onClick={this.sendRasp.bind(this, '1')}\n                >\n                  <i className=\"fa fa-refresh\"></i> Riavvia\n                </Button>\n              </Col>\n            </Row>\n          </CardBody>\n        </Collapse>\n      </Card>\n    )\n  }\n}\n\nexport default CardRasp\n","import React, { Component } from 'react'\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  Col,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  Row,\n  Collapse,\n} from 'reactstrap'\nimport { AppSwitch } from '@coreui/react'\n\nimport { store } from 'react-notifications-component'\nimport base from 'notifications'\n\nconst currentTime = () => {\n  const d = new Date()\n  return (\n    d.toLocaleTimeString() +\n    '_' +\n    d.toLocaleDateString('it-IT', {\n      month: '2-digit',\n      day: '2-digit',\n    })\n  ).replace('/', '-')\n}\n\nclass CardSettings extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      collapse: false,\n    }\n\n    this.inputSettings = JSON.parse(JSON.stringify(this.props.settings))\n  }\n\n  handleSwitch = name => {\n    const settings = this.inputSettings\n    const value = !settings[name]\n    settings[name] = value\n  }\n\n  handleText = (name, event) => {\n    const settings = this.inputSettings\n    const value = event.target.value\n\n    if (event.target.validity.valid) {\n      settings[name] = value\n    }\n  }\n\n  toggle = () => {\n    this.setState({ collapse: !this.state.collapse })\n  }\n\n  saveSettings = () => {\n    store.addNotification({\n      title: 'Settings',\n      message: 'Invio del pacchetto settings alla bici',\n      ...base,\n    })\n    this.inputSettings.update = currentTime()\n    this.props.reloadStatus(this.inputSettings)\n  }\n\n  render() {\n    return (\n      <Card>\n        <CardHeader>\n          <Button\n            block\n            color=\"link\"\n            className=\"text-left m-0 p-0\"\n            onClick={this.toggle}\n            aria-expanded={this.state.collapse}\n          >\n            <strong>Impostazioni</strong>\n          </Button>\n        </CardHeader>\n        <Collapse isOpen={!this.state.collapse}>\n          <CardBody>\n            <Form\n              action=\"\"\n              encType=\"multipart/form-data\"\n              className=\"form-horizontal\"\n            >\n              <FormGroup row>\n                <Col md=\"9\">\n                  <Label>Log</Label>\n                </Col>\n                <Col md=\"3\">\n                  <AppSwitch\n                    className={'mx-1'}\n                    variant={'pill'}\n                    color={'primary'}\n                    outline={'alt'}\n                    label\n                    onChange={this.handleSwitch.bind(this, 'log')}\n                    checked={this.props.settings.log}\n                  />\n                </Col>\n              </FormGroup>\n              <FormGroup row>\n                <Col md=\"9\">\n                  <Label>Csv</Label>\n                </Col>\n                <Col md=\"3\">\n                  <AppSwitch\n                    className={'mx-1'}\n                    variant={'pill'}\n                    color={'primary'}\n                    outline={'alt'}\n                    label\n                    onChange={this.handleSwitch.bind(this, 'csv')}\n                    checked={this.props.settings.csv}\n                  />\n                </Col>\n              </FormGroup>\n              <FormGroup row>\n                <Col md=\"9\">\n                  <Label>Ant</Label>\n                </Col>\n                <Col md=\"3\">\n                  <AppSwitch\n                    className={'mx-1'}\n                    variant={'pill'}\n                    color={'primary'}\n                    outline={'alt'}\n                    label\n                    onChange={this.handleSwitch.bind(this, 'ant')}\n                    checked={this.props.settings.ant}\n                  />\n                </Col>\n              </FormGroup>\n              <FormGroup row>\n                <Col md=\"9\">\n                  <Label>Potenza media</Label>\n                </Col>\n                <Col md=\"3\">\n                  <Input\n                    className=\"text-center\"\n                    type=\"number\"\n                    min=\"0\"\n                    pattern=\"\"\n                    defaultValue={this.props.settings.potenza}\n                    onChange={this.handleText.bind(this, 'potenza')}\n                  />\n                </Col>\n              </FormGroup>\n              <FormGroup row>\n                <Col md=\"9\">\n                  <Label>Led Mode</Label>\n                </Col>\n                <Col md=\"3\">\n                  <Input\n                    className=\"text-center\"\n                    type=\"number\"\n                    min=\"0\"\n                    pattern=\"[0-9]*\"\n                    defaultValue={this.props.settings.led}\n                    onChange={this.handleText.bind(this, 'led')}\n                  />\n                </Col>\n              </FormGroup>\n              <FormGroup row>\n                <Col md=\"9\">\n                  <Label>Circonferenza</Label>\n                </Col>\n                <Col md=\"3\">\n                  <Input\n                    className=\"text-center\"\n                    type=\"number\"\n                    min=\"0\"\n                    pattern=\"[0-9]*\"\n                    defaultValue={this.props.settings.circonferenza}\n                    onChange={this.handleText.bind(this, 'circonferenza')}\n                  />\n                </Col>\n              </FormGroup>\n\n              <FormGroup row>\n                <Col md=\"9\">\n                  <Label>Valore calibrazione</Label>\n                </Col>\n                <Col md=\"3\">\n                  <Input\n                    className=\"text-center\"\n                    type=\"number\"\n                    min=\"0\"\n                    pattern=\"[0-9]*\"\n                    defaultValue={this.props.settings.calibration_value}\n                    onInput={this.handleText.bind(this, 'calibration_value')}\n                  />\n                </Col>\n              </FormGroup>\n              <FormGroup row>\n                <Col md=\"9\">\n                  <Label>Run</Label>\n                </Col>\n                <Col md=\"3\">\n                  <Input\n                    className=\"text-center\"\n                    type=\"number\"\n                    min=\"0\"\n                    pattern=\"[0-9]*\"\n                    defaultValue={this.props.settings.run}\n                    onInput={this.handleText.bind(this, 'run')}\n                  />\n                </Col>\n              </FormGroup>\n            </Form>\n          </CardBody>\n\n          <CardFooter>\n            <Row>\n              <Col xs=\"6\" md=\"9\">\n                <Button\n                  type=\"submit\"\n                  data-dismiss=\"alert\"\n                  size=\"sl\"\n                  color=\"success\"\n                  onClick={this.saveSettings}\n                >\n                  <i className=\"fa fa-download\"></i> Save\n                </Button>\n                &ensp;\n              </Col>\n              <Col xs=\"6\" md=\"3\">\n                <div className=\"text-center\">\n                  {this.props.settings.update.replace('_', '\\n')}\n                </div>\n              </Col>\n            </Row>\n          </CardFooter>\n        </Collapse>\n      </Card>\n    )\n  }\n}\n\nexport default CardSettings\n","import React, { Component } from 'react'\nimport { Col, Row } from 'reactstrap'\nimport { CardState, CardVideo, CardRasp, CardSettings } from './Cards'\n\nclass Bike extends Component {\n  _isMounted = false\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      settings: {\n        dest: '0',\n        type: '3',\n        circonferenza: '450',\n        run: '4',\n        log: true,\n        csv: false,\n        ant: true,\n        potenza: '18',\n        led: '7',\n        p13: false,\n        led_mode: '7',\n        circumference: '5',\n        calibration: true,\n        calibration_value: '14',\n        update: '12:00:00_01:01',\n      },\n      state: {\n        dest: '0',\n        type: '1',\n        log: true,\n        video: false,\n        ant: true,\n        video_running: false,\n        video_recording: false,\n        powermeter_running: false,\n        heartrate_running: false,\n        speed_running: true,\n        calibration: false,\n      },\n      visible: false,\n      visible_video: false,\n      visible_rasp: false,\n    }\n  }\n\n  componentDidMount() {\n    this._isMounted = true\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false\n  }\n\n  reloadStatus(data) {\n    if (data !== undefined) {\n      let newValue\n      if (data.type === '7') {\n        newValue = {\n          ...this.state.state,\n          video_recording: data.value,\n        }\n        this.setState({ state: newValue })\n      }\n      if (data.type === '3') {\n        newValue = data\n        this.setState({ settings: newValue })\n      }\n    }\n  }\n\n  updateView = data => {\n    this.reloadStatus(data)\n  }\n\n  // NOTE: probabilmente da deprecare\n  loading = () => (\n    <div className=\"animated fadeIn pt-1 text-center\">Loading...</div>\n  )\n\n  render() {\n    if (this.state.state === '' || this.state.settings === '') {\n      return null\n    }\n    return (\n      <article>\n        <Row>\n          <Col xs=\"12\" xl=\"4\">\n            <CardState\n              settings={this.state.settings}\n              state={this.state.state}\n              reloadStatus={this.updateView}\n            />\n          </Col>\n\n          <Col xs=\"12\" xl=\"4\">\n            <CardVideo\n              value={this.state.state.video_recording}\n              dest={this.state.state.dest}\n              reloadStatus={this.updateView}\n            />\n            <CardRasp\n              dest={this.state.state.dest}\n              reloadStatus={this.updateView}\n            />\n          </Col>\n\n          <Col xs=\"12\" xl=\"4\">\n            <CardSettings\n              settings={this.state.settings}\n              reloadStatus={this.updateView}\n            />\n          </Col>\n        </Row>\n      </article>\n    )\n  }\n}\n\nexport default Bike\n","import React, { Component } from 'react'\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  Col,\n  Row,\n  Collapse,\n} from 'reactstrap'\nimport SocketIoHelper from 'socketio'\n\nclass CardGear extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      calibration: '',\n      collapse: false,\n    }\n\n    this.inputCalibration = undefined\n  }\n\n  toggle = () => {\n    this.setState({ collapse: !this.state.collapse })\n  }\n\n  sendCalibration = () => {\n    SocketIoHelper.sendCalibration(this.inputCalibration)\n    this.props.sendCalibration()\n  }\n\n  render() {\n    return (\n      <Card>\n        <CardHeader>\n          <Button\n            block\n            color=\"link\"\n            className=\"text-left m-0 p-0\"\n            onClick={this.toggle}\n            aria-expanded={this.state.collapse}\n          >\n            <strong>Cambio</strong>\n          </Button>\n        </CardHeader>\n        <Collapse isOpen={!this.state.collapse}>\n          <CardBody>robe</CardBody>\n          <CardFooter>\n            <Row>\n              <Col md=\"9\">\n                <Button\n                  type=\"submit\"\n                  data-dismiss=\"alert\"\n                  size=\"sl\"\n                  color=\"primary\"\n                  onClick={this.sendCalibration}\n                >\n                  <i className=\"fa fa-sign-out\"></i> Send\n                </Button>\n                &ensp;\n              </Col>\n            </Row>\n          </CardFooter>\n        </Collapse>\n      </Card>\n    )\n  }\n}\n\nexport default CardGear\n"],"sourceRoot":""}